// Initialize the service
if (!MicrosoftGraphService.Instance.Initialize(ClientId.Text))
{
    return;
}
// Login via Azure Active Directory 
if (!await MicrosoftGraphService.Instance.LoginAsync())
{
    return;
}

// Retrieve user's info from Azure Active Directory
var user = await MicrosoftGraphService.Instance.GetUserAsync();
UserPanel.DataContext = user;

// You can also select any fields you want in the response
MicrosoftGraphMessageFields[] selectedFields = { MicrosoftGraphUserProperties.Id,
												 MicrosoftGraphUserProperties.DisplayName,
												 MicrosoftGraphUserProperties.JobTitle,
												 MicrosoftGraphUserProperties.Mail,
												 MicrosoftGraphUserProperties.Department,
												 MicrosoftGraphUserProperties.PreferredLanguage};
UserPanel.DataContext = user;

// Retrieve the user's photo         
var user =await MicrosoftGraphService.Instance.GetUserAsync(selectedFields);

using (Stream photoStream = await MicrosoftGraphService.Instance.GetUserPhotoAsync())
{
   BitmapImage photo = new BitmapImage();
   photoStream.Position = 0;
   await photo.SetSourceAsync(photoStream.AsRandomAccessStream());
   this.Photo.Source = photo;
}

// Get the top 10 messages
messages = await MicrosoftGraphService.Instance.GetUserMessagesAsync(10);
MessagesList.ItemsSource = messages;

// You can also select any fields you want in the response
MicrosoftGraphUserFields[] selectedFields = { MicrosoftGraphMessageProperties.Id,
                            MicrosoftGraphMessageProperties.From,
                            MicrosoftGraphMessageProperties.Subject,
                            MicrosoftGraphMessageProperties.BodyPreview};

messages = await MicrosoftGraphService.Instance.GetUserMessagesAsync(10,selectedFields);
MessagesList.ItemsSource = messages;

